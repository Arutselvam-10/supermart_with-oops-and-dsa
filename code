import java.util.*;

class Product {
    private int id;
    private String name;
    private double price;

    public Product(int id, String name, double price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    public int getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public double getPrice() {
        return price;
    }

    @Override
    public String toString() {
        return id + ". " + name + " - ‚Çπ" + price;
    }
}

class CartItem {
    private Product product;
    private int quantity;

    public CartItem(Product product, int quantity) {
        this.product = product;
        this.quantity = quantity;
    }

    public void addQuantity(int qty) {
        this.quantity += qty;
    }

    public double getTotalPrice() {
        return product.getPrice() * quantity;
    }

    public int getQuantity() {
        return quantity;
    }

    public Product getProduct() {
        return product;
    }

    public String toString() {
        return String.format("%-20s x%-2d ‚Çπ%-6.2f", product.getName(), quantity, getTotalPrice());
    }
}

class Cart {
    private Map<Integer, CartItem> items = new HashMap<>();
    private final double GST_RATE = 0.18;

    public void addItem(Product product, int quantity) {
        int productId = product.getId();
        if (items.containsKey(productId)) {
            items.get(productId).addQuantity(quantity);
        } else {
            items.put(productId, new CartItem(product, quantity));
        }
    }

    public void printReceipt() {
        if (items.isEmpty()) {
            System.out.println("üõí Your cart is empty!");
            return;
        }

        System.out.println("\n========= üßæ Super-Market Receipt üßæ =========");
        System.out.printf("%-25s%-10s%-10s\n", "Item", "Qty", "Total");
        System.out.println("----------------------------------------");

        double subtotal = 0;
        for (CartItem item : items.values()) {
            System.out.printf("%-25s%-10d‚Çπ%-10.2f\n",
                    item.getProduct().getName(), item.getQuantity(), item.getTotalPrice());
            subtotal += item.getTotalPrice();
        }

        double gst = subtotal * GST_RATE;
        double grandTotal = subtotal + gst;

        System.out.println("----------------------------------------");
        System.out.printf("%-30s ‚Çπ%.2f\n", "Subtotal:", subtotal);
        System.out.printf("%-30s ‚Çπ%.2f\n", "GST (18%%):", gst);
        System.out.printf("%-30s ‚Çπ%.2f\n", "Grand Total:", grandTotal);
        System.out.println("========================================");
        System.out.println("üõç Thank you for shopping with Super-Market!");
    }

    public boolean isEmpty() {
        return items.isEmpty();
    }
}

public class SuperMarket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        Map<Integer, Product> products = new HashMap<>();

        
        products.put(1, new Product(1, "TOMATO - 1Kg", 40.0));
        products.put(2, new Product(2, "TOMATO - 500g", 20.0));
        products.put(3, new Product(3, "TOMATO - 250g", 10.0));
        products.put(4, new Product(4, "ONION  - 1Kg", 60.0));
        products.put(5, new Product(5, "ONION  - 500g", 30.0));
        products.put(6, new Product(6, "ONION  - 250g", 15.0));
        products.put(7, new Product(7, "MILK - 1l", 64.0));
        products.put(8, new Product(8, "MILK - 500ml", 32.0));
        products.put(9, new Product(9, "MILK - 250ml", 16.0));
        products.put(10, new Product(10, "RICE - 1kg", 70.0));
        products.put(11, new Product(11, "RICE - 500g", 35.0));
        products.put(12, new Product(12, "RICE - 250g", 17.0));
        products.put(13, new Product(13, "GREEN CHILI - 1kg", 55.0));
        products.put(14, new Product(14, "EGG", 7.0));
        products.put(15, new Product(15, "GHEE", 21.0));
        products.put(16, new Product(16, "DAIRY MILK", 20.0));
        products.put(17, new Product(17, "DAIRY MILK", 10.0));
        products.put(18, new Product(18, "BADAM NUTS", 300.0));
        products.put(19, new Product(19, "CASHEW NUTS", 270.0));
        products.put(20, new Product(20, "MUSHROOM", 68.0));
        products.put(21, new Product(21, "PANEER", 122.0));
        products.put(22, new Product(22, "NOODLES", 20.0));
        products.put(23, new Product(23, "KISAN JAM", 45.0));
        products.put(24, new Product(24, "MANGO PICKLE", 20.0));
        products.put(25, new Product(25, "GARLIC PICKLE", 25.0));
        products.put(26, new Product(26, "LEMON PICKLE", 30.0));
        products.put(27, new Product(27, "KUR-KURE", 10.0));
        products.put(28, new Product(28, "BINGO GREEN LAYS", 20.0));
        products.put(29, new Product(29, "BINGO RED LAYS", 15.0));
        products.put(30, new Product(30, "DAIRY MILK", 40.0));
        products.put(31, new Product(31, "CHILLI POWDER", 10.0));
        products.put(32, new Product(32, "SAMBAR POWDER", 10.0));
        products.put(33, new Product(33, "PEPPER POWDER", 25.0));
        products.put(34, new Product(34, "CHICKEN MASALA", 40.0));
        products.put(35, new Product(35, "BRIYANI MASALA", 70.0));
        products.put(36, new Product(36, "MUTTON MASALA", 40.0));
        products.put(37, new Product(37, "TURMERIC POWDER", 65.0));
        products.put(40, new Product(40, "MUSTARD SAUCE", 40.0));
        products.put(41, new Product(41, "KETCHUP", 50.0));
        products.put(42, new Product(42, "CHILI SAUCE", 60.0));
        products.put(43, new Product(43, "SOYA SAUCE", 30.0));
        products.put(44, new Product(44, "VINEGAR", 80.0));
        products.put(45, new Product(45, "HONEY", 150.0));
        products.put(46, new Product(46, "SUGAR", 40.0));
        products.put(47, new Product(47, "TEA POWDER", 40.0));
        products.put(48, new Product(48, "COFFEE POWDER", 50.0));
        products.put(49, new Product(49, "BREAD", 60.0));
        products.put(50, new Product(50, "RUSK", 30.0));
        products.put(51, new Product(51, "GRAPE WINE", 220.0));
        products.put(52, new Product(52, "WHITE PAPER NOTE", 30.0));
        products.put(53, new Product(53, "RULED NOTE", 40.0));
        products.put(54, new Product(54, "BROWN SHEET", 5.0));
        products.put(55, new Product(55, "PENCIL", 5.0));
        products.put(56, new Product(56, "ERASER", 2.0));
        products.put(57, new Product(57, "SHARPENER", 3.0));
        products.put(58, new Product(58, "MARKER", 10.0));
        products.put(59, new Product(59, "PEN", 45.0));
        products.put(60, new Product(60, "PENCIL BOX", 20.0));
        products.put(61, new Product(61, "WATER BOTTLE", 50.0));
        products.put(62, new Product(62, "LUNCH BOX", 100.0));
        products.put(63, new Product(63, "LUNCH BAG", 300.0));
        products.put(64, new Product(64, "GRAPH SHEET", 4.0));
        products.put(65, new Product(65, "CALCULATOR", 200.0));
        products.put(66, new Product(66, "STAPLER", 50.0));
        products.put(67, new Product(67, "TAPE", 20.0));
        products.put(68, new Product(68, "GLUE", 15.0));
        products.put(69, new Product(69, "SCISSORS", 30.0));
        products.put(70, new Product(70, "RULER", 10.0));
        products.put(71, new Product(71, "COMPASS", 15.0));
        products.put(72, new Product(72, "CAT FOOD", 100.0));
        products.put(73, new Product(73, "DOG FOOD", 200.0));
        products.put(74, new Product(74, "FISH FOOD", 80.0));
        products.put(75, new Product(75, "BIRD FOOD", 60.0));
        products.put(76, new Product(76, "PET TOY", 150.0));
        products.put(77, new Product(77, "PET BATHING SOAP", 50.0));
        products.put(78, new Product(78, "PET SHAMPOO", 100.0));
        products.put(79, new Product(79, "PET COLLAR", 150.0));
        products.put(80, new Product(80, "PET LEASH", 200.0));
        products.put(81, new Product(81, "PET BED", 500.0));
        products.put(82, new Product(82, "PET CARRIER", 800.0));
        products.put(83, new Product(83, "TOILET PAPER", 30.0));
        products.put(84, new Product(84, "HAND SANITIZER", 50.0));
        products.put(85, new Product(85, "SOAP", 20.0));
        products.put(86, new Product(86, "SHAMPOO", 150.0));
        products.put(87, new Product(87, "CONDITIONER", 200.0));
        products.put(88, new Product(88, "TOOTHPASTE", 40.0));
        products.put(89, new Product(89, "TOOTHBRUSH", 20.0));
        products.put(90, new Product(90, "DEODORANT", 100.0));
        products.put(91, new Product(91, "FACIAL WASH", 80.0));
        products.put(92, new Product(92, "BODY LOTION", 150.0));
        products.put(93, new Product(93, "FACE CREAM", 160.0));
        products.put(94, new Product(94, "2A BATTERY", 12.0));
        products.put(95, new Product(95, "9V BATTERY", 15.0));
        products.put(96, new Product(96, "AA BATTERY", 10.0));
        products.put(97, new Product(97, "AAA BATTERY", 8.0));
        products.put(98, new Product(98, "100V BULB", 20.0));
        products.put(99, new Product(99, "L E D BULB", 25.0));
        products.put(100, new Product(100, "FLUORESCENT TUBE", 30.0));
        products.put(101, new Product(101, "EXTENSION CORD", 100.0));
        
        System.out.println("üõç Welcome to Super-Market!");
        System.out.println("Available Products:");
        for (Product p : products.values()) {
            System.out.println("  " + p);
        }

        Cart cart = new Cart();

        while (true) {
            try {
                System.out.print("\nEnter Product ID (0 to checkout): ");
                int id = scanner.nextInt();

                if (id == 0) break;

               
                Product selected = products.get(id);

                if (selected == null) {
                    System.out.println("‚ùå Invalid Product ID.");
                    continue;
                }

                System.out.print("Enter quantity: ");
                int qty = scanner.nextInt();

                if (qty <= 0) {
                    System.out.println("‚ùå Invalid quantity.");
                    continue;
                }

                cart.addItem(selected, qty);
                System.out.println("‚úÖ Added: " + selected.getName() + " x" + qty);

            } catch (InputMismatchException e) {
                System.out.println("‚ùå Please enter a valid number.");
                scanner.next();
            }
        }

        cart.printReceipt();
        scanner.close();
    }
}
